{"version":3,"file":"static/js/415.dc5a63b5.chunk.js","mappings":"4NAGaA,EAAOC,EAAAA,EAAAA,GAAH,uJASJC,EAAOD,EAAAA,EAAAA,GAAH,8FAMJE,EAAQF,EAAAA,EAAAA,IAAH,uGAOLG,EAAQH,EAAAA,EAAAA,GAAH,wGAMLI,GAAOJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,kD,SC3BJM,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACV,EAAD,UACGQ,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACV,SAACb,EAAD,WACE,UAACG,EAAD,CAAMW,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA1C,WACE,SAACN,EAAD,CACEgB,IACEN,EAAW,0CAC4BA,GAD5B,mJAIbO,IAAKN,KAEP,SAACV,EAAD,UAAQU,GAASC,QAVVH,EADD,KAiBjB,C,gHCGD,UAzBa,WACX,OAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAegB,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,MAFvB,OAEUC,EAFV,OAGIH,EAAUG,GAHd,gDAKIJ,EAAS,EAAD,IALZ,0DADc,uBAAC,WAAD,wBAUdK,EACD,GAAE,KAGD,4BACGpB,IAAU,SAAC,IAAD,CAAWA,OAAQA,IAC7Bc,IAAS,yEAGf,C,mMCzBKO,EAAW,gCACXC,EAAU,mCAET,SAAeJ,IAAtB,4CAAO,OAAP,oBAAO,oGACoBK,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBC,IAFzC,cACGE,EADH,yBAIIA,EAASL,KAAKM,SAJlB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACoBJ,EAAAA,EAAAA,IAAA,UAChBF,EADgB,gCACgBC,EADhB,kBACiCK,IAFrD,cACGH,EADH,yBAIIA,EAASL,KAAKM,SAJlB,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACoBN,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACCQ,EADD,oBACoBP,IAFxC,cACGE,EADH,yBAIIA,EAASL,MAJb,kEAOA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAAuB1B,GAAvB,uFACoBmB,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACCjB,EADD,4BACuBkB,IAF3C,cACGE,EADH,yBAIIA,EAASL,KAAKY,MAJlB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0B5B,GAA1B,uFACoBmB,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACCjB,EADD,4BACuBkB,IAF3C,cACGE,EADH,yBAIIA,EAASL,KAAKM,SAJlB,kE","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 16px;\n  justify-content: center;\n  align-items: baseline;\n  flex-wrap: wrap;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  width: 340px;\n  background-color: #0088ff;\n  border-radius: 5px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  border-radius: 5px;\n  height: 510px;\n  object-fit: cover;\n`;\n\nexport const Title = styled.h3`\n  padding: 10px;\n  font-family: Arial, Helvetica, sans-serif;\n  color: #fff;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, Image, Title, Link } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, poster_path, title, name }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n                  : `https://media.istockphoto.com/id/1216251206/vector/no-image-available-icon.jpg?s=612x612&w=0&k=20&c=6C0wzKp_NZgexxoECc8HD4jRpXATfcu__peSYecAwt0=`\n              }\n              alt={title}\n            />\n            <Title>{title || name}</Title>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'services/api';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const data = await fetchTrendingMovies();\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      }\n    }\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <main>\n      {movies && <MovieList movies={movies} />}\n      {error && <p>Oops, something went wrong. Try again later</p>}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '917b4db2abe704f469567a6fce387097';\n\nexport async function fetchTrendingMovies() {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/week?api_key=${API_KEY}`\n    );\n    return response.data.results;\n}\n\nexport async function getMoviesBySearch(query) {\n    const response = await axios.get(\n        `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n    )\n    return response.data.results;\n}\n\nexport async function getMovieById(movieId) {\n    const response = await axios.get(\n        `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n    )\n    return response.data;\n}\n\nexport async function getCast(id) {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n    )\n    return response.data.cast;\n}\n\nexport async function getReviews(id) {\n    const response = await axios.get(\n        `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n    )\n    return response.data.results;\n}"],"names":["List","styled","Item","Image","Title","Link","NavLink","MovieList","movies","location","useLocation","map","id","poster_path","title","name","to","state","from","src","alt","useState","error","setError","setMovies","useEffect","fetchTrendingMovies","data","fetchMovies","BASE_URL","API_KEY","axios","response","results","getMoviesBySearch","query","getMovieById","movieId","getCast","cast","getReviews"],"sourceRoot":""}